/* tslint:disable */
/* eslint-disable */
/**
 * ToDo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ETaskPriority } from './ETaskPriority';
import {
    ETaskPriorityFromJSON,
    ETaskPriorityFromJSONTyped,
    ETaskPriorityToJSON,
} from './ETaskPriority';
import type { TaskCategoryItem } from './TaskCategoryItem';
import {
    TaskCategoryItemFromJSON,
    TaskCategoryItemFromJSONTyped,
    TaskCategoryItemToJSON,
} from './TaskCategoryItem';

/**
 * 
 * @export
 * @interface TaskItem
 */
export interface TaskItem {
    /**
     * 
     * @type {number}
     * @memberof TaskItem
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof TaskItem
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TaskItem
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof TaskItem
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskItem
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TaskItem
     */
    isCompleted?: boolean;
    /**
     * 
     * @type {ETaskPriority}
     * @memberof TaskItem
     */
    taskPriority?: ETaskPriority;
    /**
     * 
     * @type {Date}
     * @memberof TaskItem
     */
    dueDate?: Date;
    /**
     * 
     * @type {Array<TaskCategoryItem>}
     * @memberof TaskItem
     */
    taskCategories?: Array<TaskCategoryItem>;
}

/**
 * Check if a given object implements the TaskItem interface.
 */
export function instanceOfTaskItem(value: object): boolean {
    return true;
}

export function TaskItemFromJSON(json: any): TaskItem {
    return TaskItemFromJSONTyped(json, false);
}

export function TaskItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'isCompleted': json['isCompleted'] == null ? undefined : json['isCompleted'],
        'taskPriority': json['taskPriority'] == null ? undefined : ETaskPriorityFromJSON(json['taskPriority']),
        'dueDate': json['dueDate'] == null ? undefined : (new Date(json['dueDate'])),
        'taskCategories': json['taskCategories'] == null ? undefined : ((json['taskCategories'] as Array<any>).map(TaskCategoryItemFromJSON)),
    };
}

export function TaskItemToJSON(value?: TaskItem | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'title': value['title'],
        'description': value['description'],
        'isCompleted': value['isCompleted'],
        'taskPriority': ETaskPriorityToJSON(value['taskPriority']),
        'dueDate': value['dueDate'] == null ? undefined : ((value['dueDate'] as any).toISOString()),
        'taskCategories': value['taskCategories'] == null ? undefined : ((value['taskCategories'] as Array<any>).map(TaskCategoryItemToJSON)),
    };
}

