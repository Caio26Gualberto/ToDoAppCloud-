/* tslint:disable */
/* eslint-disable */
/**
 * ToDo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BooleanToDoAppResponse,
  TaskCompletionInput,
  TaskItemInput,
  TaskItemListInput,
  TaskItemPagedResultToDoAppResponse,
  TaskItemToDoAppResponse,
  TaskItemUpdateInput,
} from '../models/index';
import {
    BooleanToDoAppResponseFromJSON,
    BooleanToDoAppResponseToJSON,
    TaskCompletionInputFromJSON,
    TaskCompletionInputToJSON,
    TaskItemInputFromJSON,
    TaskItemInputToJSON,
    TaskItemListInputFromJSON,
    TaskItemListInputToJSON,
    TaskItemPagedResultToDoAppResponseFromJSON,
    TaskItemPagedResultToDoAppResponseToJSON,
    TaskItemToDoAppResponseFromJSON,
    TaskItemToDoAppResponseToJSON,
    TaskItemUpdateInputFromJSON,
    TaskItemUpdateInputToJSON,
} from '../models/index';

export interface CreateTaskRequest {
    taskItemInput?: TaskItemInput;
}

export interface DeleteTaskRequest {
    id: number;
}

export interface GetAllTasksRequest {
    taskItemListInput?: TaskItemListInput;
}

export interface GetTaskByIdRequest {
    id: number;
}

export interface UpdateTaskRequest {
    taskItemUpdateInput?: TaskItemUpdateInput;
}

export interface UpdateTaskCompletionRequest {
    taskCompletionInput?: TaskCompletionInput;
}

/**
 * 
 */
export class TaskApi extends runtime.BaseAPI {

    /**
     */
    async createTaskRaw(requestParameters: CreateTaskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BooleanToDoAppResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Task`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TaskItemInputToJSON(requestParameters['taskItemInput']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BooleanToDoAppResponseFromJSON(jsonValue));
    }

    /**
     */
    async createTask(requestParameters: CreateTaskRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BooleanToDoAppResponse> {
        const response = await this.createTaskRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async deleteTaskRaw(requestParameters: DeleteTaskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BooleanToDoAppResponse>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling deleteTask().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Task/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BooleanToDoAppResponseFromJSON(jsonValue));
    }

    /**
     */
    async deleteTask(requestParameters: DeleteTaskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BooleanToDoAppResponse> {
        const response = await this.deleteTaskRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getAllTasksRaw(requestParameters: GetAllTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TaskItemPagedResultToDoAppResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Task/list`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TaskItemListInputToJSON(requestParameters['taskItemListInput']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TaskItemPagedResultToDoAppResponseFromJSON(jsonValue));
    }

    /**
     */
    async getAllTasks(requestParameters: GetAllTasksRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TaskItemPagedResultToDoAppResponse> {
        const response = await this.getAllTasksRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getTaskByIdRaw(requestParameters: GetTaskByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TaskItemToDoAppResponse>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling getTaskById().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Task/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TaskItemToDoAppResponseFromJSON(jsonValue));
    }

    /**
     */
    async getTaskById(requestParameters: GetTaskByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TaskItemToDoAppResponse> {
        const response = await this.getTaskByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async updateTaskRaw(requestParameters: UpdateTaskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BooleanToDoAppResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Task`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: TaskItemUpdateInputToJSON(requestParameters['taskItemUpdateInput']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BooleanToDoAppResponseFromJSON(jsonValue));
    }

    /**
     */
    async updateTask(requestParameters: UpdateTaskRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BooleanToDoAppResponse> {
        const response = await this.updateTaskRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async updateTaskCompletionRaw(requestParameters: UpdateTaskCompletionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BooleanToDoAppResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Task/complete`,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: TaskCompletionInputToJSON(requestParameters['taskCompletionInput']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BooleanToDoAppResponseFromJSON(jsonValue));
    }

    /**
     */
    async updateTaskCompletion(requestParameters: UpdateTaskCompletionRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BooleanToDoAppResponse> {
        const response = await this.updateTaskCompletionRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
